# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders
.target/
.metadata
.factorypath
.buildpath
.classpath
.project
.externalToolBuilders/
*.launch
.pydevproject
.cproject
.autotools
.factorypath
.buildpath
.target/
.tern-project
.idea/
*.sublime-workspace
*.sublime-project
.vscode/
*.code-workspace

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
pids
*.pid
*.seed
*.pid.lock
lib-cov
coverage/
.nyc_output
.grunt
bower_components
.lock-wscript
build/Release
.node_repl_history
*.tgz
.yarn-integrity
.env.local
.env.development.local
.env.test.local
.env.production.local
.cache
.parcel-cache
.next
out
.nuxt
dist
.cache/
.vuepress/dist
.serverless/
.fusebox/
.dynamodb/
.tern-port
.vscode-test
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Machine Learning / AI
# Model files
*.model
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.pth
*.pt
*.ckpt
*.bin
*.safetensors
*.onnx
*.tflite
*.mlmodel

# Large datasets
*.csv
*.tsv
*.json
*.jsonl
*.parquet
*.feather
*.arrow
*.hdf5
*.h5
*.npz
*.npy

# Jupyter notebooks (keep only essential ones)
*.ipynb
!examples/*.ipynb
!tutorials/*.ipynb

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorBoard
runs/
logs/
tensorboard/

# Hugging Face
.cache/
huggingface/

# Transformers
transformers_cache/

# PyTorch
*.pth
*.pt
checkpoints/
models/

# TensorFlow
*.pb
*.pbtxt
checkpoint
*.ckpt*

# Keras
*.h5
*.hdf5

# Scikit-learn
*.joblib
*.pkl

# XGBoost
*.bst

# LightGBM
*.txt

# CatBoost
*.cbm

# ONNX
*.onnx

# CoreML
*.mlmodel

# TensorFlow Lite
*.tflite

# OpenVINO
*.xml
*.bin

# NVIDIA TensorRT
*.engine
*.plan

# CUDA
*.cubin
*.fatbin
*.ptx

# OpenCL
*.cl

# Project specific
# Model directories (keep structure but ignore large files)
models/*/model-*.safetensors
models/*/pytorch_model-*.bin
models/*/tf_model-*.h5
models/*/flax_model-*.msgpack
models/*/model.safetensors
models/*/pytorch_model.bin
models/*/tf_model.h5
models/*/flax_model.msgpack

# Keep model configs and tokenizers
!models/*/config.json
!models/*/tokenizer.json
!models/*/tokenizer_config.json
!models/*/special_tokens_map.json
!models/*/vocab.txt
!models/*/merges.txt
!models/*/added_tokens.json
!models/*/generation_config.json
!models/*/chat_template.jinja
!models/*/README.md
!models/*/LICENSE
!models/*/USAGE_POLICY

# Training data
data/raw/
data/processed/
data/external/
data/interim/
*.csv
*.tsv
*.json
*.jsonl
*.parquet
*.feather
*.arrow

# Keep data structure
!data/README.md
!data/.gitkeep

# Experiments
experiments/
runs/
logs/
outputs/
results/
checkpoints/
wandb/
mlruns/

# Temporary files
tmp/
temp/
.tmp/
.temp/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/
*.out
*.err

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with secrets
.env
.env.local
.env.development
.env.test
.env.production
config/secrets.yaml
config/secrets.json
secrets/
credentials/
keys/

# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# Large files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.wma
*.pdf
*.doc
*.docx
*.ppt
*.pptx
*.xls
*.xlsx

# Keep essential documentation
!README.md
!LICENSE
!CHANGELOG.md
!CONTRIBUTING.md
!docs/
!examples/
!tutorials/

# Project specific ignores
# Add any project-specific files or directories to ignore here
